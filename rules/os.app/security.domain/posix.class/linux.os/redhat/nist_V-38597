{
  "severity": "medium", 
  "tags": {
    "nist": [
      "V-38597", 
      "C-46155r3_chk", 
      "F-43545r1_fix"
    ]
  }, 
  "text": {
    "en": {
      "check": "The status of the \"kernel.exec-shield\" kernel parameter can be queried by running the following command: \n\n$ sysctl kernel.exec-shield\n$ grep kernel.exec-shield /etc/sysctl.conf\n\nThe output of the command should indicate a value of \"1\". If this value is not the default value, investigate how it could have been adjusted at runtime, and verify it is not set improperly in \"/etc/sysctl.conf\". \nIf the correct value is not returned, this is a finding.", 
      "fix": "To set the runtime status of the \"kernel.exec-shield\" kernel parameter, run the following command: \n\n# sysctl -w kernel.exec-shield=1\n\nIf this is not the system's default value, add the following line to \"/etc/sysctl.conf\": \n\nkernel.exec-shield = 1", 
      "long_description": "ExecShield uses the segmentation feature on all x86 systems to prevent execution in memory higher than a certain address. It writes an address as a limit in the code segment descriptor, to control where code can be executed, on a per-process basis. When the kernel places a process's memory regions such as the stack and heap higher than this address, the hardware prevents execution in that address range.", 
      "short_description": "The system must limit the ability of processes to have simultaneous write and execute access to memory."
    }
  }
}